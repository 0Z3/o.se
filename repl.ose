/#/ Load lined module.
/s/./o.se.lined/o.se.lined.so
/!/load
/<</_e

/#/ Load udp module.
/s/./o.se.udp/o.se.udp.so
/!/load
/<</_e

/#/ Load debugger.
/s/./o.se.db/o.se.db.so
/!/load
/<</_e

/#/ ############################################################
/#/ /@/make/fd/cb
/#/
/#/ This takes a file descriptor (int) on top of the stack,
/#/ and a bundle that will be executed when that file descriptor
/#/ has data to be read.
/#/ ############################################################
/'/!/s
/s//fd/cb/
/'/!/swap
/'/!/push
/'/!/concat/strings
/'/>/_x
/'/!/-rot
/'/!/assign
/'/</_x
/!/bundle/all
/@/make/fd/cb

/#/ ############################################################
/#/ /@/udp/receive
/#/
/#/ Helper function to set up a UDP port to listen to. Takes
/#/ a port on top of the stack, and a bundle to be executed
/#/ the file descriptor that is associated with that port has
/#/ data to be read.
/#/ ############################################################
/s/127.0.0.1
/'/!/swap
/'/!/udp/sock/bind
/'/!/dup
/'/!/listen
/'/!/make/fd/cb
/!/bundle/all
/@/udp/receive

/#/ Listen to stdin.
/'/!/readfd
/'/!/lined/char
/'/!/lined/print
/'/!/print
/!/bundle/all
/$/stdin
/!/dup
/!/listen
/!/make/fd/cb

/#/ Add a key binding for C^c (quit).
/$/quit
/@/lined/binding/C^c

/#/ Parser does nothing, but can be replaced by another.
/!/make/bundle
/@/repl/parse

/'/!/lined/format
/!/bundle/all
/@/repl/format

/#/ ############################################################
/#/ /@/lined/binding/RET
/#/ 
/#/ Call /lined/line to handle the input, and then style the
/#/ output by coloring the prompt and last command and printing
/#/ the output.
/#/ ############################################################
/'/!/lined/addtohist
/#/ The terminal doesn't echo, so we have to print the prompt
/#/ and the command that was typed if we want to see them.
/'/!/dup
/'/>/lo
/'/s//ps
/'/!/lookup
/'/!/nip
/'/!/swap
/'/!/push
/'/!/concat/strings
/'/$/ansi/color/green
/'/!/color/text
/'/!/println

/#/ Execute the command that was entered.
/'/!/repl/parse
/'/!/exec1
/#/ Store the environment
/'/</_e

/#/ Bundle the whole stack and print it.
/'/!/bundle/all
/'/!/repl/format
/'/!/push
/'/!/unpack/drop
/'/$/ansi/color/cyan
/'/!/color/text
/'/!/println

/#/ Finally, set up our prompt. No need to print, since this
/#/ procedure was called by the one that handles stdin, which
/#/ prints after processing the most recent char.
/'/!/lined/prompt
/!/bundle/all
/@/lined/binding/RET

/#/ ############################################################
/#/ Process input.
/#/ ############################################################

/#/ Process stdin.
/'/$/fd/x
/'/!/readfd
/'/!/lined/char
/'/!/lined/print
/'/!/print
/!/bundle/all
/@/stdin/proc

/#/ Process udp input.
/'/$/fd/x
/'/!/udp/recv
/'/!/format
/'/!/println
/!/bundle/all
/@/udp/proc

/#/ ############################################################
/#/ /@/repl/run
/#/ 
/#/ This is the bundle that will be run when the host has
/#/ some input ready to be read.
/#/ ############################################################

/'/!/dup
/'/!/s
/s//fd/cb/
/'/!/swap
/'/!/push
/'/!/concat/strings
/'/!/!
/!/bundle/all
/@/repl/run

/#/ parser on top, then pretty printer
/'/>/_x
/'/!/swap
/s//repl/parse
/'/!/assign
/'/!/swap
/s//repl/format
/'/!/assign
/'/</_x
/!/bundle/all
/@/lang/set

/#/ ############################################################
/#/ /@/lang/oscbn
/#/ 
/#/ Change to the oscbn parser / formatter.
/#/ ############################################################
/s/o.se.oscbn/o.se.oscbn.so
/'/!/load
/'/<</_x
/!/bundle/all
/@/load/lang/oscbn

/!/make/bundle
/'/!/oscbn/println
/!/push
/!/make/bundle
/'/!/oscbn/parse
/!/push
/'/!/lang/set
/!/bundle/all
/@/lang/oscbn

/#/ ############################################################
/#/ /@/lang/protosc
/#/
/#/ Change to the protOSC parser / formatter.
/#/ ############################################################
/!/make/bundle
/'/!/lined/format
/!/push
/!/make/bundle
/'/!/lang/set
/!/bundle/all
/@/lang/protosc

/s/./ansi_colorcodes.ose
/!/load

/#/ ############################################################
/#/ Debugger
/#/ ############################################################

/$/db/enter
/@/exception

/'/!/Debugger entered
/'/!/println

/'/>/lo
/s/debug / 
/s//ps
/'/!/assign
/'/</lo

/'/!/lined/prompt
/'/!/lined/print
/'/!/print
/'/!/make/bundle
/#/ /'/!/db/enter
/!/bundle/all
/@/db/start

/'/>/lo
/s// 
/s//ps
/'/!/assign
/'/</lo
/!/bundle/all
/@/db/end

/#/ ############################################################
/#/ Finalize everything we've set up and initialize the prompt.
/#/ ############################################################

/#/ Move everything we stored in the env to _x, and clear the env.
/>/_e
/<</_x
/!/make/bundle
/</_e

/#/ Set up lined.
/#/ /!/lined/init
/!/lined/prompt
/!/lined/print
/!/print
